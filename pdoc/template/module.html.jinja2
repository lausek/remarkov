{% extends "default/module.html.jinja2" %}

{% block favicon %}
    <!-- IE -->
    <link rel="shortcut icon" type="image/x-icon" href="https://raw.githubusercontent.com/lausek/remarkov/gh-pages/public/favicon.ico" />
    <!-- other browsers -->
    <link rel="icon" type="image/x-icon" href="https://raw.githubusercontent.com/lausek/remarkov/gh-pages/public/favicon.ico" />
{% endblock %}

{% block nav_title %}
    <img src="https://raw.githubusercontent.com/lausek/remarkov/gh-pages/public/logo192.png" class="logo" alt="project logo"/>
{% endblock %}

{# redeclare this block as we do not use the module index #}
{% block module_list_link %}
    {% set parentmodule = ".".join(module.modulename.split(".")[:-1]) %}
    {% if parentmodule and parentmodule in all_modules %}
        <a class="pdoc-button module-list-button" href="../{{ parentmodule.split(".")[-1] }}.html">
            {% include "box-arrow-in-left.svg" %}
            &nbsp;
            {{- parentmodule -}}
        </a>
    {% endif %}
{% endblock %}

<style>

    {% block style_theme %}
        /* use dark mode by default */
        :root {
            --pdoc-background: #212529;

            --text: #f7f7f7;
            --muted: #9d9d9d;
            --link: var(--accent2);
            --link-hover: red;
            --code: #333;
            --active: #555;

            --accent: #343434;
            --accent2: #f91f1f;

            --nav-hover: rgba(0, 0, 0, 0.1);
            --name: var(--text);
            --def: orange;
            --annotation: #00c037;
        }

        nav,
        .pdoc pre { border: none !important; }

        .pdoc .hll { background-color: #49483e }
        .pdoc  { background: var(--accent); color: var(--text) }
        .pdoc .c { color: #75715e } /* Comment */
        .pdoc .err { color: #960050; background-color: #1e0010 } /* Error */
        .pdoc .k { color: #66d9ef } /* Keyword */
        .pdoc .l { color: #ae81ff } /* Literal */
        .pdoc .n { color: var(--text) } /* Name */
        .pdoc .o { color: #f92672 } /* Operator */
        .pdoc .p { color: var(--text) } /* Punctuation */
        .pdoc .ch { color: #75715e } /* Comment.Hashbang */
        .pdoc .cm { color: #75715e } /* Comment.Multiline */
        .pdoc .cp { color: #75715e } /* Comment.Preproc */
        .pdoc .cpf { color: #75715e } /* Comment.PreprocFile */
        .pdoc .c1 { color: #75715e } /* Comment.Single */
        .pdoc .cs { color: #75715e } /* Comment.Special */
        .pdoc .gd { color: #f92672 } /* Generic.Deleted */
        .pdoc .ge { font-style: italic } /* Generic.Emph */
        .pdoc .gi { color: #a6e22e } /* Generic.Inserted */
        .pdoc .gs { font-weight: bold } /* Generic.Strong */
        .pdoc .gu { color: #75715e } /* Generic.Subheading */
        .pdoc .kc { color: #66d9ef } /* Keyword.Constant */
        .pdoc .kd { color: #66d9ef } /* Keyword.Declaration */
        .pdoc .kn { color: #f92672 } /* Keyword.Namespace */
        .pdoc .kp { color: #66d9ef } /* Keyword.Pseudo */
        .pdoc .kr { color: #66d9ef } /* Keyword.Reserved */
        .pdoc .kt { color: #66d9ef } /* Keyword.Type */
        .pdoc .ld { color: var(--def) } /* Literal.Date */
        .pdoc .m { color: #ae81ff } /* Literal.Number */
        .pdoc .s { color: var(--def) } /* Literal.String */
        .pdoc .na { color: #a6e22e } /* Name.Attribute */
        .pdoc .nb { color: var(--text) } /* Name.Builtin */
        .pdoc .nc { color: #a6e22e } /* Name.Class */
        .pdoc .no { color: #66d9ef } /* Name.Constant */
        .pdoc .nd { color: #a6e22e } /* Name.Decorator */
        .pdoc .ni { color: var(--text) } /* Name.Entity */
        .pdoc .ne { color: #a6e22e } /* Name.Exception */
        .pdoc .nf { color: #a6e22e } /* Name.Function */
        .pdoc .nl { color: var(--text) } /* Name.Label */
        .pdoc .nn { color: var(--text) } /* Name.Namespace */
        .pdoc .nx { color: #a6e22e } /* Name.Other */
        .pdoc .py { color: var(--text) } /* Name.Property */
        .pdoc .nt { color: #f92672 } /* Name.Tag */
        .pdoc .nv { color: var(--text) } /* Name.Variable */
        .pdoc .ow { color: #f92672 } /* Operator.Word */
        .pdoc .w { color: var(--text) } /* Text.Whitespace */
        .pdoc .mb { color: #ae81ff } /* Literal.Number.Bin */
        .pdoc .mf { color: #ae81ff } /* Literal.Number.Float */
        .pdoc .mh { color: #ae81ff } /* Literal.Number.Hex */
        .pdoc .mi { color: #ae81ff } /* Literal.Number.Integer */
        .pdoc .mo { color: #ae81ff } /* Literal.Number.Oct */
        .pdoc .sa { color: var(--def) } /* Literal.String.Affix */
        .pdoc .sb { color: var(--def) } /* Literal.String.Backtick */
        .pdoc .sc { color: var(--def) } /* Literal.String.Char */
        .pdoc .dl { color: var(--def) } /* Literal.String.Delimiter */
        .pdoc .sd { color: var(--def) } /* Literal.String.Doc */
        .pdoc .s2 { color: var(--def) } /* Literal.String.Double */
        .pdoc .se { color: #ae81ff } /* Literal.String.Escape */
        .pdoc .sh { color: var(--def) } /* Literal.String.Heredoc */
        .pdoc .si { color: var(--def) } /* Literal.String.Interpol */
        .pdoc .sx { color: var(--def) } /* Literal.String.Other */
        .pdoc .sr { color: var(--def) } /* Literal.String.Regex */
        .pdoc .s1 { color: var(--def) } /* Literal.String.Single */
        .pdoc .ss { color: var(--def) } /* Literal.String.Symbol */
        .pdoc .bp { color: var(--text) } /* Name.Builtin.Pseudo */
        .pdoc .fm { color: #a6e22e } /* Name.Function.Magic */
        .pdoc .vc { color: var(--text) } /* Name.Variable.Class */
        .pdoc .vg { color: var(--text) } /* Name.Variable.Global */
        .pdoc .vi { color: var(--text) } /* Name.Variable.Instance */
        .pdoc .vm { color: var(--text) } /* Name.Variable.Magic */
        .pdoc .il { color: #ae81ff } /* Literal.Number.Integer.Long */

    {% endblock %}

</style>

{% block body %}
    {{ super() }}
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        /* if the user decided to use the light theme -> change back */

        const theme = localStorage.getItem("theme");
        if(theme === "light") {
            const style = document.createElement("style");

            style.innerHTML = `
            :root {
                --pdoc-background: white;

                --text: #222;
                --muted: #9d9d9d;
                --link: var(--accent2);
                --link-hover: red;
                --code: var(--accent);
                --active: #555;

                --accent: #EEE;
                --accent2: #f91f1f;
            }
            `;

            document.head.appendChild(style);
        }
    });
    </script>
{% endblock %}